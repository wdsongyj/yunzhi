//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.36460
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.36460 版自动生成。
// 
#pragma warning disable 1591

namespace YunZhi.Client.YZService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36415")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="YunZhiServiceSoap", Namespace="http://tempuri.org/")]
    public partial class YunZhiService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientsListOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPatientInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHealthy_RecordListByDocIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientInfoByPTIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetZhenLiaoListByPTIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryZhenLiaoListOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryProjectListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProjectListAndPatientInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelHealthRecodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRecorInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetDrugInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetZhiHuiTuiSongDataOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public YunZhiService() {
            this.Url = global::YunZhi.Client.Properties.Settings.Default.YunZhi_Client_YZService_YunZhiService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event UserLoginCompletedEventHandler UserLoginCompleted;
        
        /// <remarks/>
        public event GetPatientsListCompletedEventHandler GetPatientsListCompleted;
        
        /// <remarks/>
        public event AddPatientInfoCompletedEventHandler AddPatientInfoCompleted;
        
        /// <remarks/>
        public event GetHealthy_RecordListByDocIdCompletedEventHandler GetHealthy_RecordListByDocIdCompleted;
        
        /// <remarks/>
        public event GetPatientInfoByPTIDCompletedEventHandler GetPatientInfoByPTIDCompleted;
        
        /// <remarks/>
        public event GetZhenLiaoListByPTIDCompletedEventHandler GetZhenLiaoListByPTIDCompleted;
        
        /// <remarks/>
        public event QueryZhenLiaoListCompletedEventHandler QueryZhenLiaoListCompleted;
        
        /// <remarks/>
        public event QueryProjectListCompletedEventHandler QueryProjectListCompleted;
        
        /// <remarks/>
        public event GetProjectListAndPatientInfoCompletedEventHandler GetProjectListAndPatientInfoCompleted;
        
        /// <remarks/>
        public event DelHealthRecodeCompletedEventHandler DelHealthRecodeCompleted;
        
        /// <remarks/>
        public event UpdateRecorInfoCompletedEventHandler UpdateRecorInfoCompleted;
        
        /// <remarks/>
        public event SetDrugInfoCompletedEventHandler SetDrugInfoCompleted;
        
        /// <remarks/>
        public event GetZhiHuiTuiSongDataCompletedEventHandler GetZhiHuiTuiSongDataCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UserLogin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public YunZhiResult UserLogin(string account, string pwd) {
            object[] results = this.Invoke("UserLogin", new object[] {
                        account,
                        pwd});
            return ((YunZhiResult)(results[0]));
        }
        
        /// <remarks/>
        public void UserLoginAsync(string account, string pwd) {
            this.UserLoginAsync(account, pwd, null);
        }
        
        /// <remarks/>
        public void UserLoginAsync(string account, string pwd, object userState) {
            if ((this.UserLoginOperationCompleted == null)) {
                this.UserLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserLoginOperationCompleted);
            }
            this.InvokeAsync("UserLogin", new object[] {
                        account,
                        pwd}, this.UserLoginOperationCompleted, userState);
        }
        
        private void OnUserLoginOperationCompleted(object arg) {
            if ((this.UserLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserLoginCompleted(this, new UserLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientsList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetPatientsList(string idCard) {
            object[] results = this.Invoke("GetPatientsList", new object[] {
                        idCard});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientsListAsync(string idCard) {
            this.GetPatientsListAsync(idCard, null);
        }
        
        /// <remarks/>
        public void GetPatientsListAsync(string idCard, object userState) {
            if ((this.GetPatientsListOperationCompleted == null)) {
                this.GetPatientsListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientsListOperationCompleted);
            }
            this.InvokeAsync("GetPatientsList", new object[] {
                        idCard}, this.GetPatientsListOperationCompleted, userState);
        }
        
        private void OnGetPatientsListOperationCompleted(object arg) {
            if ((this.GetPatientsListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientsListCompleted(this, new GetPatientsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddPatientInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public YunZhiResult AddPatientInfo(string name, string address, string tel, string birtyary, string sex, string idnumber, string remark, string hid, string eid) {
            object[] results = this.Invoke("AddPatientInfo", new object[] {
                        name,
                        address,
                        tel,
                        birtyary,
                        sex,
                        idnumber,
                        remark,
                        hid,
                        eid});
            return ((YunZhiResult)(results[0]));
        }
        
        /// <remarks/>
        public void AddPatientInfoAsync(string name, string address, string tel, string birtyary, string sex, string idnumber, string remark, string hid, string eid) {
            this.AddPatientInfoAsync(name, address, tel, birtyary, sex, idnumber, remark, hid, eid, null);
        }
        
        /// <remarks/>
        public void AddPatientInfoAsync(string name, string address, string tel, string birtyary, string sex, string idnumber, string remark, string hid, string eid, object userState) {
            if ((this.AddPatientInfoOperationCompleted == null)) {
                this.AddPatientInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPatientInfoOperationCompleted);
            }
            this.InvokeAsync("AddPatientInfo", new object[] {
                        name,
                        address,
                        tel,
                        birtyary,
                        sex,
                        idnumber,
                        remark,
                        hid,
                        eid}, this.AddPatientInfoOperationCompleted, userState);
        }
        
        private void OnAddPatientInfoOperationCompleted(object arg) {
            if ((this.AddPatientInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPatientInfoCompleted(this, new AddPatientInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetHealthy_RecordListByDocId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public YunZhiResult GetHealthy_RecordListByDocId(string docId) {
            object[] results = this.Invoke("GetHealthy_RecordListByDocId", new object[] {
                        docId});
            return ((YunZhiResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetHealthy_RecordListByDocIdAsync(string docId) {
            this.GetHealthy_RecordListByDocIdAsync(docId, null);
        }
        
        /// <remarks/>
        public void GetHealthy_RecordListByDocIdAsync(string docId, object userState) {
            if ((this.GetHealthy_RecordListByDocIdOperationCompleted == null)) {
                this.GetHealthy_RecordListByDocIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHealthy_RecordListByDocIdOperationCompleted);
            }
            this.InvokeAsync("GetHealthy_RecordListByDocId", new object[] {
                        docId}, this.GetHealthy_RecordListByDocIdOperationCompleted, userState);
        }
        
        private void OnGetHealthy_RecordListByDocIdOperationCompleted(object arg) {
            if ((this.GetHealthy_RecordListByDocIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHealthy_RecordListByDocIdCompleted(this, new GetHealthy_RecordListByDocIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientInfoByPTID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public YunZhiResult GetPatientInfoByPTID(string patientID) {
            object[] results = this.Invoke("GetPatientInfoByPTID", new object[] {
                        patientID});
            return ((YunZhiResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientInfoByPTIDAsync(string patientID) {
            this.GetPatientInfoByPTIDAsync(patientID, null);
        }
        
        /// <remarks/>
        public void GetPatientInfoByPTIDAsync(string patientID, object userState) {
            if ((this.GetPatientInfoByPTIDOperationCompleted == null)) {
                this.GetPatientInfoByPTIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientInfoByPTIDOperationCompleted);
            }
            this.InvokeAsync("GetPatientInfoByPTID", new object[] {
                        patientID}, this.GetPatientInfoByPTIDOperationCompleted, userState);
        }
        
        private void OnGetPatientInfoByPTIDOperationCompleted(object arg) {
            if ((this.GetPatientInfoByPTIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientInfoByPTIDCompleted(this, new GetPatientInfoByPTIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetZhenLiaoListByPTID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public YunZhiResult GetZhenLiaoListByPTID(string ptid, string hid, string hrid) {
            object[] results = this.Invoke("GetZhenLiaoListByPTID", new object[] {
                        ptid,
                        hid,
                        hrid});
            return ((YunZhiResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetZhenLiaoListByPTIDAsync(string ptid, string hid, string hrid) {
            this.GetZhenLiaoListByPTIDAsync(ptid, hid, hrid, null);
        }
        
        /// <remarks/>
        public void GetZhenLiaoListByPTIDAsync(string ptid, string hid, string hrid, object userState) {
            if ((this.GetZhenLiaoListByPTIDOperationCompleted == null)) {
                this.GetZhenLiaoListByPTIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetZhenLiaoListByPTIDOperationCompleted);
            }
            this.InvokeAsync("GetZhenLiaoListByPTID", new object[] {
                        ptid,
                        hid,
                        hrid}, this.GetZhenLiaoListByPTIDOperationCompleted, userState);
        }
        
        private void OnGetZhenLiaoListByPTIDOperationCompleted(object arg) {
            if ((this.GetZhenLiaoListByPTIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetZhenLiaoListByPTIDCompleted(this, new GetZhenLiaoListByPTIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryZhenLiaoList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public YunZhiResult QueryZhenLiaoList(string startTime, string endTime, string hid, string pname) {
            object[] results = this.Invoke("QueryZhenLiaoList", new object[] {
                        startTime,
                        endTime,
                        hid,
                        pname});
            return ((YunZhiResult)(results[0]));
        }
        
        /// <remarks/>
        public void QueryZhenLiaoListAsync(string startTime, string endTime, string hid, string pname) {
            this.QueryZhenLiaoListAsync(startTime, endTime, hid, pname, null);
        }
        
        /// <remarks/>
        public void QueryZhenLiaoListAsync(string startTime, string endTime, string hid, string pname, object userState) {
            if ((this.QueryZhenLiaoListOperationCompleted == null)) {
                this.QueryZhenLiaoListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryZhenLiaoListOperationCompleted);
            }
            this.InvokeAsync("QueryZhenLiaoList", new object[] {
                        startTime,
                        endTime,
                        hid,
                        pname}, this.QueryZhenLiaoListOperationCompleted, userState);
        }
        
        private void OnQueryZhenLiaoListOperationCompleted(object arg) {
            if ((this.QueryZhenLiaoListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryZhenLiaoListCompleted(this, new QueryZhenLiaoListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryProjectList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public YunZhiResult QueryProjectList(string startTime, string endTime, string hid, string pname) {
            object[] results = this.Invoke("QueryProjectList", new object[] {
                        startTime,
                        endTime,
                        hid,
                        pname});
            return ((YunZhiResult)(results[0]));
        }
        
        /// <remarks/>
        public void QueryProjectListAsync(string startTime, string endTime, string hid, string pname) {
            this.QueryProjectListAsync(startTime, endTime, hid, pname, null);
        }
        
        /// <remarks/>
        public void QueryProjectListAsync(string startTime, string endTime, string hid, string pname, object userState) {
            if ((this.QueryProjectListOperationCompleted == null)) {
                this.QueryProjectListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryProjectListOperationCompleted);
            }
            this.InvokeAsync("QueryProjectList", new object[] {
                        startTime,
                        endTime,
                        hid,
                        pname}, this.QueryProjectListOperationCompleted, userState);
        }
        
        private void OnQueryProjectListOperationCompleted(object arg) {
            if ((this.QueryProjectListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryProjectListCompleted(this, new QueryProjectListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProjectListAndPatientInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public YunZhiResult GetProjectListAndPatientInfo(string eid, string hid, string startTime, string endTime) {
            object[] results = this.Invoke("GetProjectListAndPatientInfo", new object[] {
                        eid,
                        hid,
                        startTime,
                        endTime});
            return ((YunZhiResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetProjectListAndPatientInfoAsync(string eid, string hid, string startTime, string endTime) {
            this.GetProjectListAndPatientInfoAsync(eid, hid, startTime, endTime, null);
        }
        
        /// <remarks/>
        public void GetProjectListAndPatientInfoAsync(string eid, string hid, string startTime, string endTime, object userState) {
            if ((this.GetProjectListAndPatientInfoOperationCompleted == null)) {
                this.GetProjectListAndPatientInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectListAndPatientInfoOperationCompleted);
            }
            this.InvokeAsync("GetProjectListAndPatientInfo", new object[] {
                        eid,
                        hid,
                        startTime,
                        endTime}, this.GetProjectListAndPatientInfoOperationCompleted, userState);
        }
        
        private void OnGetProjectListAndPatientInfoOperationCompleted(object arg) {
            if ((this.GetProjectListAndPatientInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProjectListAndPatientInfoCompleted(this, new GetProjectListAndPatientInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DelHealthRecode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public YunZhiResult DelHealthRecode(string hrid) {
            object[] results = this.Invoke("DelHealthRecode", new object[] {
                        hrid});
            return ((YunZhiResult)(results[0]));
        }
        
        /// <remarks/>
        public void DelHealthRecodeAsync(string hrid) {
            this.DelHealthRecodeAsync(hrid, null);
        }
        
        /// <remarks/>
        public void DelHealthRecodeAsync(string hrid, object userState) {
            if ((this.DelHealthRecodeOperationCompleted == null)) {
                this.DelHealthRecodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelHealthRecodeOperationCompleted);
            }
            this.InvokeAsync("DelHealthRecode", new object[] {
                        hrid}, this.DelHealthRecodeOperationCompleted, userState);
        }
        
        private void OnDelHealthRecodeOperationCompleted(object arg) {
            if ((this.DelHealthRecodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelHealthRecodeCompleted(this, new DelHealthRecodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateRecorInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public YunZhiResult UpdateRecorInfo(string hrid, string data03, string data04, string data05, string data06, System.Data.DataTable table, string[] delID) {
            object[] results = this.Invoke("UpdateRecorInfo", new object[] {
                        hrid,
                        data03,
                        data04,
                        data05,
                        data06,
                        table,
                        delID});
            return ((YunZhiResult)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateRecorInfoAsync(string hrid, string data03, string data04, string data05, string data06, System.Data.DataTable table, string[] delID) {
            this.UpdateRecorInfoAsync(hrid, data03, data04, data05, data06, table, delID, null);
        }
        
        /// <remarks/>
        public void UpdateRecorInfoAsync(string hrid, string data03, string data04, string data05, string data06, System.Data.DataTable table, string[] delID, object userState) {
            if ((this.UpdateRecorInfoOperationCompleted == null)) {
                this.UpdateRecorInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRecorInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateRecorInfo", new object[] {
                        hrid,
                        data03,
                        data04,
                        data05,
                        data06,
                        table,
                        delID}, this.UpdateRecorInfoOperationCompleted, userState);
        }
        
        private void OnUpdateRecorInfoOperationCompleted(object arg) {
            if ((this.UpdateRecorInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRecorInfoCompleted(this, new UpdateRecorInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetDrugInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public YunZhiResult SetDrugInfo(System.Data.DataTable table) {
            object[] results = this.Invoke("SetDrugInfo", new object[] {
                        table});
            return ((YunZhiResult)(results[0]));
        }
        
        /// <remarks/>
        public void SetDrugInfoAsync(System.Data.DataTable table) {
            this.SetDrugInfoAsync(table, null);
        }
        
        /// <remarks/>
        public void SetDrugInfoAsync(System.Data.DataTable table, object userState) {
            if ((this.SetDrugInfoOperationCompleted == null)) {
                this.SetDrugInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetDrugInfoOperationCompleted);
            }
            this.InvokeAsync("SetDrugInfo", new object[] {
                        table}, this.SetDrugInfoOperationCompleted, userState);
        }
        
        private void OnSetDrugInfoOperationCompleted(object arg) {
            if ((this.SetDrugInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetDrugInfoCompleted(this, new SetDrugInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetZhiHuiTuiSongData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public YunZhiResult GetZhiHuiTuiSongData(string data03, string data04, string data05, string hosid, string hosname, string docid, string docName, string recordid) {
            object[] results = this.Invoke("GetZhiHuiTuiSongData", new object[] {
                        data03,
                        data04,
                        data05,
                        hosid,
                        hosname,
                        docid,
                        docName,
                        recordid});
            return ((YunZhiResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetZhiHuiTuiSongDataAsync(string data03, string data04, string data05, string hosid, string hosname, string docid, string docName, string recordid) {
            this.GetZhiHuiTuiSongDataAsync(data03, data04, data05, hosid, hosname, docid, docName, recordid, null);
        }
        
        /// <remarks/>
        public void GetZhiHuiTuiSongDataAsync(string data03, string data04, string data05, string hosid, string hosname, string docid, string docName, string recordid, object userState) {
            if ((this.GetZhiHuiTuiSongDataOperationCompleted == null)) {
                this.GetZhiHuiTuiSongDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetZhiHuiTuiSongDataOperationCompleted);
            }
            this.InvokeAsync("GetZhiHuiTuiSongData", new object[] {
                        data03,
                        data04,
                        data05,
                        hosid,
                        hosname,
                        docid,
                        docName,
                        recordid}, this.GetZhiHuiTuiSongDataOperationCompleted, userState);
        }
        
        private void OnGetZhiHuiTuiSongDataOperationCompleted(object arg) {
            if ((this.GetZhiHuiTuiSongDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetZhiHuiTuiSongDataCompleted(this, new GetZhiHuiTuiSongDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.36430")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class YunZhiResult {
        
        private int resultField;
        
        private string msgField;
        
        private System.Data.DataTable dataInfoField;
        
        private System.Data.DataTable[] dataListField;
        
        /// <remarks/>
        public int Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public string Msg {
            get {
                return this.msgField;
            }
            set {
                this.msgField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable DataInfo {
            get {
                return this.dataInfoField;
            }
            set {
                this.dataInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("DataTable")]
        public System.Data.DataTable[] DataList {
            get {
                return this.dataListField;
            }
            set {
                this.dataListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36415")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36415")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36415")]
    public delegate void UserLoginCompletedEventHandler(object sender, UserLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36415")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public YunZhiResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((YunZhiResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36415")]
    public delegate void GetPatientsListCompletedEventHandler(object sender, GetPatientsListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36415")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36415")]
    public delegate void AddPatientInfoCompletedEventHandler(object sender, AddPatientInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36415")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPatientInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPatientInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public YunZhiResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((YunZhiResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36415")]
    public delegate void GetHealthy_RecordListByDocIdCompletedEventHandler(object sender, GetHealthy_RecordListByDocIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36415")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHealthy_RecordListByDocIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHealthy_RecordListByDocIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public YunZhiResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((YunZhiResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36415")]
    public delegate void GetPatientInfoByPTIDCompletedEventHandler(object sender, GetPatientInfoByPTIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36415")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientInfoByPTIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientInfoByPTIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public YunZhiResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((YunZhiResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36415")]
    public delegate void GetZhenLiaoListByPTIDCompletedEventHandler(object sender, GetZhenLiaoListByPTIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36415")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetZhenLiaoListByPTIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetZhenLiaoListByPTIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public YunZhiResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((YunZhiResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36415")]
    public delegate void QueryZhenLiaoListCompletedEventHandler(object sender, QueryZhenLiaoListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36415")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryZhenLiaoListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryZhenLiaoListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public YunZhiResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((YunZhiResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36415")]
    public delegate void QueryProjectListCompletedEventHandler(object sender, QueryProjectListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36415")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryProjectListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryProjectListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public YunZhiResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((YunZhiResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36415")]
    public delegate void GetProjectListAndPatientInfoCompletedEventHandler(object sender, GetProjectListAndPatientInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36415")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProjectListAndPatientInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProjectListAndPatientInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public YunZhiResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((YunZhiResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36415")]
    public delegate void DelHealthRecodeCompletedEventHandler(object sender, DelHealthRecodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36415")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelHealthRecodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelHealthRecodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public YunZhiResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((YunZhiResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36415")]
    public delegate void UpdateRecorInfoCompletedEventHandler(object sender, UpdateRecorInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36415")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateRecorInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateRecorInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public YunZhiResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((YunZhiResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36415")]
    public delegate void SetDrugInfoCompletedEventHandler(object sender, SetDrugInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36415")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetDrugInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetDrugInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public YunZhiResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((YunZhiResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36415")]
    public delegate void GetZhiHuiTuiSongDataCompletedEventHandler(object sender, GetZhiHuiTuiSongDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36415")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetZhiHuiTuiSongDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetZhiHuiTuiSongDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public YunZhiResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((YunZhiResult)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591